{
  "plugins": [
    "@typescript-eslint",
    "import"
  ],
  "extends": [
    "eslint:recommended",
    "prettier",

    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    // Extends two more configuration from "import" plugin
    "plugin:import/recommended",
    "plugin:import/typescript"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json",
    "tsconfigRootDir": "./"
  },
  "settings": {
    "import/resolver": {
      "typescript": {}
    }
  },
  "rules": {
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": [
          "variable",
          "function"
        ],
        "format": [
          "camelCase", "UPPER_CASE"
        ]
      },
      {
        "selector": "interface",
        "format": [
          "PascalCase"
        ],
        "custom": {
          "regex": "^I[A-Z]",
          "match": true
        }
      }
    ],
    "@typescript-eslint/member-ordering": ["error", {
      "default": [
        // Index signature
        "signature",

        // Fields
        "public-static-field",
        "protected-static-field",
        "private-static-field",

        "public-decorated-field",
        "protected-decorated-field",
        "private-decorated-field",

        "public-instance-field",
        "protected-instance-field",
        "private-instance-field",

        "public-abstract-field",
        "protected-abstract-field",
        "private-abstract-field",

        "public-field",
        "protected-field",
        "private-field",

        "static-field",
        "instance-field",
        "abstract-field",

        "decorated-field",

        "field",

        // Constructors
        "public-constructor",
        "protected-constructor",
        "private-constructor",

        "constructor",

        // Getters
        "public-static-get",
        "protected-static-get",
        "private-static-get",

        "public-decorated-get",
        "protected-decorated-get",
        "private-decorated-get",

        "public-instance-get",
        "protected-instance-get",
        "private-instance-get",

        "public-abstract-get",
        "protected-abstract-get",
        "private-abstract-get",

        "public-get",
        "protected-get",
        "private-get",

        "static-get",
        "instance-get",
        "abstract-get",

        "decorated-get",

        "get",

        // Setters
        "public-static-set",
        "protected-static-set",
        "private-static-set",

        "public-decorated-set",
        "protected-decorated-set",
        "private-decorated-set",

        "public-instance-set",
        "protected-instance-set",
        "private-instance-set",

        "public-abstract-set",
        "protected-abstract-set",
        "private-abstract-set",

        "public-set",
        "protected-set",
        "private-set",

        "static-set",
        "instance-set",
        "abstract-set",

        "decorated-set",

        "set",

        // Methods
        "public-static-method",
        "protected-static-method",
        "private-static-method",

        "public-decorated-method",
        "protected-decorated-method",
        "private-decorated-method",

        "public-instance-method",
        "protected-instance-method",
        "private-instance-method",

        "public-abstract-method",
        "protected-abstract-method",
        "private-abstract-method",

        "public-method",
        "protected-method",
        "private-method",

        "static-method",
        "instance-method",
        "abstract-method",

        "decorated-method",

        "method"
      ]
    }],
    "sort-imports": [
      "error",
      {
        "ignoreCase": false,
        "ignoreDeclarationSort": true,
        // don"t want to sort import lines, use eslint-plugin-import instead
        "ignoreMemberSort": false,
        "memberSyntaxSortOrder": [
          "none",
          "all",
          "multiple",
          "single"
        ],
        "allowSeparatedGroups": true
      }
    ],
    "import/order": [
      "error",
      {
        "groups": [
          "builtin",
          // Built-in imports (come from NodeJS native) go first
          "external",
          // <- External imports
          "internal",
          // <- Absolute imports
          [
            "sibling",
            "parent"
          ],
          // <- Relative imports, the sibling and parent types they can be mingled together
          "index",
          // <- index imports
          "unknown"
          // <- unknown
        ],
        "newlines-between": "always",
        "alphabetize": {
          /* sort in ascending order. Options: ["ignore", "asc", "desc"] */
          "order": "asc",
          /* ignore case. Options: [true, false] */
          "caseInsensitive": true
        }
      }
    ]
  }
}
